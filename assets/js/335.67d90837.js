(window.webpackJsonp=window.webpackJsonp||[]).push([[335],{801:function(t,a,e){"use strict";e.r(a);var v=e(14),s=Object(v.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"java进阶-集合框架"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#java进阶-集合框架"}},[t._v("#")]),t._v(" Java进阶-集合框架")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("Hi")]),t._v(" "),e("p",[t._v("Java是一门面向对象的语言，就免不了处理对象，为了方便操作多个对象，那么我们就得把这多个对象存储起来，想要存储多个对象(变量),很容易就能想到一个容器(集合)来装载")]),t._v(" "),e("p",[t._v("简单来说集合就是“由若干个确定的元素所构成的整体”。就是Java给我们提供了工具方便我们去操作多个Java对象。")]),t._v(" "),e("ul",[e("li",[t._v("1.集合只能存放对象。比如你存入一个int型数据66放入集合中，其实它是自动转换成Integer类后存入的，Java中每一种基本数据类型都有对应的引用类型。")]),t._v(" "),e("li",[t._v("2.集合存放的都是对象的引用，而非对象本身。所以我们称集合中的对象就是集合中对象的引用。对象本身还是放在堆内存中。")]),t._v(" "),e("li",[t._v("3.集合可以存放不同类型，不限数量的数据类型。")])])]),t._v(" "),e("p",[e("strong",[t._v("如何学习集合")])]),t._v(" "),e("p",[t._v("首先需要了解集合的分类，以及集合用法（看api），实现类，各有什么功能和不同，这在面试中经常会考到，再一个就是从数据结构层面底层去考虑这些问题，虽然以后在工作中多数人都不会涉及，但是这是考验学习能力的一种方式。")]),t._v(" "),e("p",[e("strong",[t._v("集合的主要三种类型")])]),t._v(" "),e("ul",[e("li",[t._v("List：一种有序列表的集合，例如，按索引排列的Student的List；")]),t._v(" "),e("li",[t._v("Set：一种保证没有重复元素的集合，例如，所有无重复名称的Student的Set；")]),t._v(" "),e("li",[t._v("Map：一种通过键值（key-value）查找的映射表集合，例如，根据Student的name查找对应Student的Map。")])]),t._v(" "),e("p",[e("strong",[t._v("关于使用集合的心得")])]),t._v(" "),e("ul",[e("li",[t._v("如果是集合类型，有List和Set供我们选择。List的特点是插入有序的，元素是可重复的。Set的特点是插入无序的，元素不可重复的。至于选择哪个实现类来作为我们的存储容器，我们就得看具体的应用场景。是希望可重复的就得用List，选择List下常见的子类。是希望不可重复，选择Set下常见的子类。")]),t._v(" "),e("li",[t._v("如果是Key-Value型，那我们会选择Map。如果要保持插入顺序的，我们可以选择LinkedHashMap，如果不需要则选择HashMap，如果要排序则选择TreeMap。")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/guide/java-collection1.jpg"),alt:"mixureSecure"}})])}),[],!1,null,null,null);a.default=s.exports}}]);