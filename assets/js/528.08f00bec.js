(window.webpackJsonp=window.webpackJsonp||[]).push([[528],{990:function(t,r,e){"use strict";e.r(r);var a=e(14),n=Object(a.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"算法思想知识体系详解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#算法思想知识体系详解"}},[t._v("#")]),t._v(" 算法思想知识体系详解")]),t._v(" "),e("h2",{attrs:{id:"布隆过滤器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#布隆过滤器"}},[t._v("#")]),t._v(" 布隆过滤器")]),t._v(" "),e("p",[t._v("常用于大数据的排重，比如email，url 等。\n核心原理：将每条数据通过计算产生一个指纹（一个字节或多个字节，但一定比原始数据要少很多），其中每一位都是通过随机计算获得，在将指纹映射到一个大的按位存储的空间中。注意：会有一定的错误率。\n优点：空间和时间效率都很高。\n缺点：随着存入的元素数量增加，误算率随之增加。")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://segmentfault.com/a/1190000002729689",target:"_blank",rel:"noopener noreferrer"}},[t._v("《布隆过滤器 -- 空间效率很高的数据结构》"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://blog.csdn.net/zdxiq000/article/details/57626464",target:"_blank",rel:"noopener noreferrer"}},[t._v("《大量数据去重：Bitmap和布隆过滤器(Bloom Filter)》"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://blog.csdn.net/qq_30242609/article/details/71024458",target:"_blank",rel:"noopener noreferrer"}},[t._v("《基于Redis的布隆过滤器的实现》"),e("OutboundLink")],1),t._v(" "),e("ul",[e("li",[t._v("基于 Redis 的 Bitmap 数据结构。")])])]),t._v(" "),e("li",[e("a",{attrs:{href:"https://blog.csdn.net/lemon_tree12138/article/details/47973715",target:"_blank",rel:"noopener noreferrer"}},[t._v("《网络爬虫：URL去重策略之布隆过滤器(BloomFilter)的使用》"),e("OutboundLink")],1),t._v(" "),e("ul",[e("li",[t._v("使用Java中的 BitSet 类 和 加权和hash算法。")])])])]),t._v(" "),e("h2",{attrs:{id:"字符串比较"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#字符串比较"}},[t._v("#")]),t._v(" 字符串比较")]),t._v(" "),e("h3",{attrs:{id:"kmp-算法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kmp-算法"}},[t._v("#")]),t._v(" KMP 算法")]),t._v(" "),e("p",[t._v("KMP：Knuth-Morris-Pratt算法（简称KMP）\n核心原理是利用一个“部分匹配表”，跳过已经匹配过的元素。")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2013/05/Knuth%E2%80%93Morris%E2%80%93Pratt_algorithm.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《字符串匹配的KMP算法》"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"深度优先、广度优先"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#深度优先、广度优先"}},[t._v("#")]),t._v(" 深度优先、广度优先")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://www.cnblogs.com/0kk470/p/7555033.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《广度优先搜索BFS和深度优先搜索DFS》"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"贪心算法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#贪心算法"}},[t._v("#")]),t._v(" 贪心算法")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://www.cnblogs.com/MrSaver/p/8641971.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《算法：贪婪算法基础》"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://blog.csdn.net/a345017062/article/details/52443781",target:"_blank",rel:"noopener noreferrer"}},[t._v("《常见算法及问题场景——贪心算法》"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"回溯算法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#回溯算法"}},[t._v("#")]),t._v(" 回溯算法")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://blog.csdn.net/qfikh/article/details/51960331",target:"_blank",rel:"noopener noreferrer"}},[t._v("《 五大常用算法之四：回溯法》"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"剪枝算法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#剪枝算法"}},[t._v("#")]),t._v(" 剪枝算法")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://blog.csdn.net/luningcsdn/article/details/50930276",target:"_blank",rel:"noopener noreferrer"}},[t._v("《α-β剪枝算法》"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"动态规划"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#动态规划"}},[t._v("#")]),t._v(" 动态规划")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://www.cnblogs.com/little-YTMM/p/5372680.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《详解动态规划——邹博讲动态规划》"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://blog.csdn.net/yao_zi_jie/article/details/54580283",target:"_blank",rel:"noopener noreferrer"}},[t._v("《动态规划算法的个人理解》"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"朴素贝叶斯"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#朴素贝叶斯"}},[t._v("#")]),t._v(" 朴素贝叶斯")]),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://blog.csdn.net/amds123/article/details/70173402",target:"_blank",rel:"noopener noreferrer"}},[t._v("《带你搞懂朴素贝叶斯分类算法》"),e("OutboundLink")],1)]),t._v(" "),e("ul",[e("li",[t._v("P(B|A)=P(A|B)P(B)/P(A)")])])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2011/08/bayesian_inference_part_one.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《贝叶斯推断及其互联网应用1》"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2011/08/bayesian_inference_part_two.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《贝叶斯推断及其互联网应用2》"),e("OutboundLink")],1)])])]),t._v(" "),e("h2",{attrs:{id:"推荐算法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#推荐算法"}},[t._v("#")]),t._v(" 推荐算法")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"http://www.infoq.com/cn/articles/recommendation-algorithm-overview-part01",target:"_blank",rel:"noopener noreferrer"}},[t._v("《推荐算法综述》"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.oschina.net/news/51297/top-10-open-source-recommendation-systems",target:"_blank",rel:"noopener noreferrer"}},[t._v("《TOP 10 开源的推荐系统简介》"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"最小生成树算法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#最小生成树算法"}},[t._v("#")]),t._v(" 最小生成树算法")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://blog.csdn.net/luoshixian099/article/details/51908175",target:"_blank",rel:"noopener noreferrer"}},[t._v("《算法导论--最小生成树（Kruskal和Prim算法）》"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"最短路径算法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#最短路径算法"}},[t._v("#")]),t._v(" 最短路径算法")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://blog.csdn.net/qq_35644234/article/details/60870719",target:"_blank",rel:"noopener noreferrer"}},[t._v("《Dijkstra算法详解》"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);r.default=n.exports}}]);