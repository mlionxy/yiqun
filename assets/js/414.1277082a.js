(window.webpackJsonp=window.webpackJsonp||[]).push([[414],{888:function(a,t,v){"use strict";v.r(t);var r=v(14),s=Object(r.a)({},(function(){var a=this,t=a.$createElement,v=a._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[v("h1",{attrs:{id:"java进阶-并发编程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java进阶-并发编程"}},[a._v("#")]),a._v(" Java进阶-并发编程")]),a._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[a._v("Hi")]),a._v(" "),v("p",[a._v("对于一个 Java 程序员而言，能否熟练掌握并发编程是判断他优秀与否的重要标准之一。因为并发编程是 Java 语言中最为晦涩的知识点，它涉及操作系统、内存、CPU、编程语言等多方面的基础能力，更为考验一个程序员的内功。")]),a._v(" "),v("p",[a._v("尤其是大数据时代的来临，高并发更成为了家常便饭，工作中，你总是绕不开并发编程的任务，比如说，你想写个程序，一边从文件中读取数据，一边还要做实时计算…所以，想成为一名资深的 Java 后端工程师，并发编程必须要牢牢把握。")])]),a._v(" "),v("h3",{attrs:{id:"一、基础概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#一、基础概念"}},[a._v("#")]),a._v(" 一、基础概念")]),a._v(" "),v("p",[a._v("学习 Java 并发编程，第一步就是要打下坚实的基础，把涉及的相关基础概念都搞清楚。比如，深度认识 Java 内存模型、死锁产生的原因和解决方案、线程间的协作机制，等等。")]),a._v(" "),v("img",{attrs:{src:a.$withBase("/guide/java-current1.jpg"),alt:"mixureSecure"}}),a._v(" "),v("p",[a._v("可见性、原子性和有序性问题：并发编程 Bug 的源头")]),a._v(" "),v("h3",{attrs:{id:"二、拿下常见的并发工具类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二、拿下常见的并发工具类"}},[a._v("#")]),a._v(" 二、拿下常见的并发工具类")]),a._v(" "),v("p",[a._v("Java 经过这些年的发展，Java SDK 并发包提供了非常丰富的功能，对于初学者来说可谓是眼花缭乱，好多人觉得无从下手。但是，Java SDK 并发包乃是并发大师 Doug Lea 出品，堪称经典，它内部一定是有章可循的。")]),a._v(" "),v("p",[a._v("所以，只有你把并发编程核心的问题搞清楚，回过头来看 Java SDK 并发包，你才会有种豁然开朗的感觉：它不过是针对并发问题开发出来的工具而已。而此时的 SDK 并发包就可以任你“盘”了。")]),a._v(" "),v("img",{attrs:{src:a.$withBase("/guide/java-current2.png"),alt:"mixureSecure"}}),a._v(" "),v("h3",{attrs:{id:"三、对并发设计模式了如指掌"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三、对并发设计模式了如指掌"}},[a._v("#")]),a._v(" 三、对并发设计模式了如指掌")]),a._v(" "),v("p",[a._v("设计模式是成功经验的总结和提炼，在编程领域，最知名的就是面向对象设计模式。同样在并发编程领域，也有人总结和提炼出了一系列的设计模式。学习设计模式是快速提升你设计功底的捷径。")]),a._v(" "),v("p",[a._v("来看看最常见的 9 种并发设计模式有哪些：")]),a._v(" "),v("img",{attrs:{src:a.$withBase("/guide/java-current3.png"),alt:"mixureSecure"}}),a._v(" "),v("h3",{attrs:{id:"四、产出自己的-java-并发编程全景图"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#四、产出自己的-java-并发编程全景图"}},[a._v("#")]),a._v(" 四、产出自己的 Java 并发编程全景图")]),a._v(" "),v("p",[a._v("并发编程并不是一门相对独立的学科，而是一个综合学科，导致大家学习很有难度，容易注重细节而忘了全局。这里我有两个建议：一个是“跳出来，看全景”；另一个是“钻进去，看本质”。")]),a._v(" "),v("p",[a._v("结合我多年的工作经验来看，并发编程领域可以抽象成"),v("strong",[a._v("三个核心问题：分工、同步和互斥")]),a._v("。以下是我根据这三个核心问题制作的「并发编程全景图」，可以让你的知识成体系，所学知识也融汇贯通起来，由点成线，由线及面。")]),a._v(" "),v("img",{attrs:{src:a.$withBase("/guide/java-current4.png"),alt:"mixureSecure"}})])}),[],!1,null,null,null);t.default=s.exports}}]);